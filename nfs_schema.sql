SET ECHO ON
SPOOL nfs_schema_output.txt

-- Generated by Oracle SQL Developer Data Modeler 20.4.0.374.0801
--   at:        2022-01-27 19:53:53 CST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c

-- Group number: 62
-- Group member: Junjie Chen, Huixin Wang, Thinuga Wellage


-- Includes DROP table commands at head of schema file
DROP TABLE assessor CASCADE CONSTRAINTS;

DROP TABLE bd_assessor_visit CASCADE CONSTRAINTS;

DROP TABLE building CASCADE CONSTRAINTS;

DROP TABLE building_damage CASCADE CONSTRAINTS;

DROP TABLE building_insurance CASCADE CONSTRAINTS;

DROP TABLE fire_event CASCADE CONSTRAINTS;

DROP TABLE fire_lga CASCADE CONSTRAINTS;

DROP TABLE insurer CASCADE CONSTRAINTS;

DROP TABLE lga CASCADE CONSTRAINTS;

DROP TABLE owner CASCADE CONSTRAINTS;

DROP TABLE property CASCADE CONSTRAINTS;

DROP TABLE property_type CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE assessor (
    assessor_id           NUMBER(10) NOT NULL,
    assessor_gname        VARCHAR2(50) NOT NULL,
    assessor_fname        VARCHAR2(50) NOT NULL,
    assessor_type         VARCHAR2(50) NOT NULL,
    insurer_insurer_code  NUMBER(10),
    lga_lga_code          NUMBER(4)
);

ALTER TABLE assessor
    ADD CONSTRAINT assessor_type_cosntraint CHECK ( assessor_type IN ( 'insurer',
                                                                       'lga' ) );

COMMENT ON COLUMN assessor.assessor_id IS
    'assessor id';

COMMENT ON COLUMN assessor.assessor_gname IS
    'assessor gname';

COMMENT ON COLUMN assessor.assessor_fname IS
    'assessor_fname';

COMMENT ON COLUMN assessor.assessor_type IS
    'assessor type (lga or insurer)';

COMMENT ON COLUMN assessor.insurer_insurer_code IS
    'insurance company id';

COMMENT ON COLUMN assessor.lga_lga_code IS
    'lga code ';

ALTER TABLE assessor ADD CONSTRAINT insurer_assessor_pk PRIMARY KEY ( assessor_id );

CREATE TABLE bd_assessor_visit (
    building_damage_bd_id   NUMBER(10) NOT NULL,
    bdav_datetime_arrived   DATE NOT NULL,
    bdav_datetime_departed  DATE NOT NULL
);

COMMENT ON COLUMN bd_assessor_visit.building_damage_bd_id IS
    'building damage id (surrogate key)';

COMMENT ON COLUMN bd_assessor_visit.bdav_datetime_arrived IS
    'bd assessor arrive date';

COMMENT ON COLUMN bd_assessor_visit.bdav_datetime_departed IS
    'bdav_datetime_departed';

ALTER TABLE bd_assessor_visit ADD CONSTRAINT bd_insurer_visit_pk PRIMARY KEY ( building_damage_bd_id,
                                                                               bdav_datetime_arrived );

CREATE TABLE building (
    property_property_id    NUMBER(10) NOT NULL,
    building_id             NUMBER(3) NOT NULL,
    building_approved_date  DATE NOT NULL,
    building_size           NUMBER(6, 1) NOT NULL,
    building_class          NUMBER(2) NOT NULL,
    building_lga_value      NUMBER(10, 2) NOT NULL
);

COMMENT ON COLUMN building.property_property_id IS
    'property id';

COMMENT ON COLUMN building.building_id IS
    'building id';

COMMENT ON COLUMN building.building_approved_date IS
    'building approve date';

COMMENT ON COLUMN building.building_size IS
    'building size';

COMMENT ON COLUMN building.building_class IS
    'building class';

COMMENT ON COLUMN building.building_lga_value IS
    'building current value for lga';

ALTER TABLE building ADD CONSTRAINT building_pk PRIMARY KEY ( building_id,
                                                              property_property_id );

CREATE TABLE building_damage (
    bd_id                  NUMBER(10) NOT NULL,
    bd_lag_damage_cost     NUMBER(10, 2),
    bd_lga_visit_date      DATE,
    bd_totally_destroyed   CHAR(1) NOT NULL,
    building_building_id   NUMBER(3) NOT NULL,
    building_property_id   NUMBER(10) NOT NULL,
    fire_event_fire_id     NUMBER(10) NOT NULL,
    bd_insurance_payout    NUMBER(10, 2),
    assessor_assessor_id   NUMBER(10),
    assessor_assessor_id1  NUMBER(10)
);

ALTER TABLE building_damage
    ADD CONSTRAINT bd_totally_damaged_cosntraint CHECK ( bd_totally_destroyed IN ( 'N',
                                                                                   'Y' ) );

COMMENT ON COLUMN building_damage.bd_id IS
    'building damage id (surrogate key)';

COMMENT ON COLUMN building_damage.bd_lag_damage_cost IS
    'building damage cost';

COMMENT ON COLUMN building_damage.bd_lga_visit_date IS
    'lga visit date';

COMMENT ON COLUMN building_damage.bd_totally_destroyed IS
    'building damage Y or N';

COMMENT ON COLUMN building_damage.building_building_id IS
    'building id';

COMMENT ON COLUMN building_damage.building_property_id IS
    'property id';

COMMENT ON COLUMN building_damage.fire_event_fire_id IS
    'fire id';

COMMENT ON COLUMN building_damage.bd_insurance_payout IS
    'insurance payout';

COMMENT ON COLUMN building_damage.assessor_assessor_id IS
    'assessor id';

COMMENT ON COLUMN building_damage.assessor_assessor_id1 IS
    'assessor id';

ALTER TABLE building_damage ADD CONSTRAINT building_damage_pk PRIMARY KEY ( bd_id );

ALTER TABLE building_damage
    ADD CONSTRAINT unqinue_constaint UNIQUE ( building_building_id,
                                              building_property_id,
                                              fire_event_fire_id );

CREATE TABLE building_insurance (
    insurance_start_date  DATE NOT NULL,
    insurer_insurer_code  NUMBER(10) NOT NULL,
    building_property_id  NUMBER(10) NOT NULL,
    building_building_id  NUMBER(3) NOT NULL,
    insurance_end_date    DATE NOT NULL
);

COMMENT ON COLUMN building_insurance.insurance_start_date IS
    'insurance start date';

COMMENT ON COLUMN building_insurance.insurer_insurer_code IS
    'insurance company id';

COMMENT ON COLUMN building_insurance.building_property_id IS
    'property id';

COMMENT ON COLUMN building_insurance.building_building_id IS
    'building id';

COMMENT ON COLUMN building_insurance.insurance_end_date IS
    'insurance end date';

ALTER TABLE building_insurance
    ADD CONSTRAINT building_insurance_pk PRIMARY KEY ( insurance_start_date,
                                                       insurer_insurer_code,
                                                       building_building_id,
                                                       building_property_id );

CREATE TABLE fire_event (
    fire_id             NUMBER(10) NOT NULL,
    fire_name           VARCHAR2(50) NOT NULL,
    fire_long           NUMBER(8, 5) NOT NULL,
    fire_lat            NUMBER(9, 5) NOT NULL,
    fire_start_date     DATE NOT NULL,
    fire_area_burnt     NUMBER(8, 1) NOT NULL,
    fire_event_fire_id  NUMBER(10)
);

COMMENT ON COLUMN fire_event.fire_id IS
    'fire id';

COMMENT ON COLUMN fire_event.fire_name IS
    'fire name';

COMMENT ON COLUMN fire_event.fire_long IS
    'fire longitude';

COMMENT ON COLUMN fire_event.fire_lat IS
    'fire latitude';

COMMENT ON COLUMN fire_event.fire_start_date IS
    'fire start date';

COMMENT ON COLUMN fire_event.fire_area_burnt IS
    'fire burnt area';

COMMENT ON COLUMN fire_event.fire_event_fire_id IS
    'fire id';

ALTER TABLE fire_event ADD CONSTRAINT fire_event_pk PRIMARY KEY ( fire_id );

CREATE TABLE fire_lga (
    lga_lga_code        NUMBER(4) NOT NULL,
    fire_event_fire_id  NUMBER(10) NOT NULL
);

COMMENT ON COLUMN fire_lga.lga_lga_code IS
    'lga code ';

COMMENT ON COLUMN fire_lga.fire_event_fire_id IS
    'fire id';

ALTER TABLE fire_lga ADD CONSTRAINT fire_lga_pk PRIMARY KEY ( lga_lga_code,
                                                              fire_event_fire_id );

CREATE TABLE insurer (
    insurer_code   NUMBER(10) NOT NULL,
    insurer_name   VARCHAR2(50) NOT NULL,
    insurer_phone  CHAR(10) NOT NULL
);

COMMENT ON COLUMN insurer.insurer_code IS
    'insurance company id';

COMMENT ON COLUMN insurer.insurer_name IS
    'insurance company name';

COMMENT ON COLUMN insurer.insurer_phone IS
    'insurer phone';

ALTER TABLE insurer ADD CONSTRAINT insurer_pk PRIMARY KEY ( insurer_code );

CREATE TABLE lga (
    lga_code   NUMBER(4) NOT NULL,
    lga_ame    VARCHAR2(50) NOT NULL,
    lga_size   NUMBER(10, 1) NOT NULL,
    lga_ceo    VARCHAR2(50) NOT NULL,
    lga_phone  CHAR(10) NOT NULL,
    lga_type   VARCHAR2(50) NOT NULL,
    lga_state  VARCHAR2(50) NOT NULL
);

ALTER TABLE lga
    ADD CONSTRAINT lga_type_consntrainnt CHECK ( lga_type IN ( 'borough',
                                                               'city',
                                                               'rural city',
                                                               'shire' ) );

COMMENT ON COLUMN lga.lga_code IS
    'lga code ';

COMMENT ON COLUMN lga.lga_ame IS
    'lga name';

COMMENT ON COLUMN lga.lga_size IS
    'lga size';

COMMENT ON COLUMN lga.lga_ceo IS
    'lga ceo';

COMMENT ON COLUMN lga.lga_phone IS
    'lga phone';

COMMENT ON COLUMN lga.lga_type IS
    'lga type connstrainted by city shire borough rural city';

COMMENT ON COLUMN lga.lga_state IS
    'lga state';

ALTER TABLE lga ADD CONSTRAINT lga_pk PRIMARY KEY ( lga_code );

CREATE TABLE owner (
    owner_id     NUMBER(10) NOT NULL,
    owner_name   VARCHAR2(50) NOT NULL,
    owner_phone  CHAR(10) NOT NULL
);

COMMENT ON COLUMN owner.owner_id IS
    'owner id';

COMMENT ON COLUMN owner.owner_name IS
    'owner name';

COMMENT ON COLUMN owner.owner_phone IS
    ' owner phone';

ALTER TABLE owner ADD CONSTRAINT owner_pk PRIMARY KEY ( owner_id );

CREATE TABLE property (
    property_id                NUMBER(10) NOT NULL,
    property_street            VARCHAR2(50) NOT NULL,
    property_townn             VARCHAR2(50) NOT NULL,
    property_postcode          CHAR(4) NOT NULL,
    property_size              NUMBER(6, 1) NOT NULL,
    lga_lga_code               NUMBER(4) NOT NULL,
    owner_owner_id             NUMBER(10) NOT NULL,
    property_type_proptype_no  NUMBER(3) NOT NULL
);

COMMENT ON COLUMN property.property_id IS
    'property id';

COMMENT ON COLUMN property.property_street IS
    'property street';

COMMENT ON COLUMN property.property_townn IS
    'property town';

COMMENT ON COLUMN property.property_postcode IS
    'property postcode';

COMMENT ON COLUMN property.property_size IS
    'property size';

COMMENT ON COLUMN property.lga_lga_code IS
    'lga code ';

COMMENT ON COLUMN property.owner_owner_id IS
    'owner id';

COMMENT ON COLUMN property.property_type_proptype_no IS
    'property type index';

ALTER TABLE property ADD CONSTRAINT property_pk PRIMARY KEY ( property_id );

CREATE TABLE property_type (
    proptype_no     NUMBER(3) NOT NULL,
    proptype_nname  VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN property_type.proptype_no IS
    'property type index';

COMMENT ON COLUMN property_type.proptype_nname IS
    'property type name';

ALTER TABLE property_type ADD CONSTRAINT property_type_pk PRIMARY KEY ( proptype_no );

ALTER TABLE building_damage
    ADD CONSTRAINT assessor_bd FOREIGN KEY ( assessor_assessor_id )
        REFERENCES assessor ( assessor_id );

ALTER TABLE bd_assessor_visit
    ADD CONSTRAINT bd_assessor_visit FOREIGN KEY ( building_damage_bd_id )
        REFERENCES building_damage ( bd_id );

ALTER TABLE building_damage
    ADD CONSTRAINT building_damage FOREIGN KEY ( building_building_id,
                                                 building_property_id )
        REFERENCES building ( building_id,
                              property_property_id );

ALTER TABLE building_insurance
    ADD CONSTRAINT building_insurance FOREIGN KEY ( building_building_id,
                                                    building_property_id )
        REFERENCES building ( building_id,
                              property_property_id );

ALTER TABLE building_damage
    ADD CONSTRAINT fire_damage FOREIGN KEY ( fire_event_fire_id )
        REFERENCES fire_event ( fire_id );

ALTER TABLE fire_lga
    ADD CONSTRAINT fire_event_lga FOREIGN KEY ( fire_event_fire_id )
        REFERENCES fire_event ( fire_id );

ALTER TABLE fire_event
    ADD CONSTRAINT fire_event_spark FOREIGN KEY ( fire_event_fire_id )
        REFERENCES fire_event ( fire_id );

ALTER TABLE assessor
    ADD CONSTRAINT insurer_assessor FOREIGN KEY ( insurer_insurer_code )
        REFERENCES insurer ( insurer_code );

ALTER TABLE building_damage
    ADD CONSTRAINT insurer_assessor_bd FOREIGN KEY ( assessor_assessor_id1 )
        REFERENCES assessor ( assessor_id );

ALTER TABLE building_insurance
    ADD CONSTRAINT insurer_insurance FOREIGN KEY ( insurer_insurer_code )
        REFERENCES insurer ( insurer_code );

ALTER TABLE assessor
    ADD CONSTRAINT lga_assessor FOREIGN KEY ( lga_lga_code )
        REFERENCES lga ( lga_code );

ALTER TABLE fire_lga
    ADD CONSTRAINT lga_fire FOREIGN KEY ( lga_lga_code )
        REFERENCES lga ( lga_code );

ALTER TABLE property
    ADD CONSTRAINT lga_property FOREIGN KEY ( lga_lga_code )
        REFERENCES lga ( lga_code );

ALTER TABLE property
    ADD CONSTRAINT owner_prorperty FOREIGN KEY ( owner_owner_id )
        REFERENCES owner ( owner_id );

ALTER TABLE building
    ADD CONSTRAINT property_building FOREIGN KEY ( property_property_id )
        REFERENCES property ( property_id );

ALTER TABLE property
    ADD CONSTRAINT proptype_property FOREIGN KEY ( property_type_proptype_no )
        REFERENCES property_type ( proptype_no );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            12
-- CREATE INDEX                             0
-- ALTER TABLE                             32
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0

SPOOL OFF
SET ECHO OFF
